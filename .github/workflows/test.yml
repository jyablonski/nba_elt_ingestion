name: Prod Test - PR

on:
  pull_request:

jobs:
  pytest_build:
    name: Test Pipeline
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Repo
        uses: actions/checkout@v2

      - name: Install Python 3.11
        uses: actions/setup-python@v1
        with:
          python-version: 3.11

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Cache Python 3.11
        uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-pipenv-${{ hashFiles('Pipfile.lock') }}

      - name: Install Dependencies
        env:
          PIPENV_NOSPIN: 'true'
          WORKON_HOME: ~/.local/share/virtualenvs
          PIPENV_CACHE_DIR: ~/.local/share/pipcache
        if: steps.pipenv-cache.outputs.cache-hit != 'true'
        run: |
          poetry install --with dev
          poetry run python -m nltk.downloader vader_lexicon

      - name: Create and populate .coveralls.yml file
        env:
          repo_token: ${{ secrets.repo_token }}
        run: |
          touch .coveralls.yml
          echo repo_token: "$repo_token" >> .coveralls.yml
          mkdir logs
          cat > logs/example.log
        shell: bash

      - name: Start Postgres
        run: make start-postgres

      - name: Run tests with pytest
        run: poetry run pytest --cov --cov-report xml

      - name: Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.repo_token }}
        run: |
          pip install coveralls==3.3.1
          coveralls
      
      - name: Stop Postgres
        run: make stop-postgres