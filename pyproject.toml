[project]
name = "nba-elt-ingestion"
version = "2.0.7"
description = "Ingestion Script for NBA ELT Project"
authors = [{ name = "jyablonski9", email = "jyablonski9@gmail.com" }]
requires-python = ">=3.12.0, <3.13"
readme = "README.md"
dependencies = [
    "numpy>=1.25.2,<2",
    "pandas>=2.2.3,<3",
    "boto3>=1.36.2,<2",
    "praw>=7.7.1,<8",
    "html5lib~=1.1",
    "lxml>=4.9.3,<5",
    "nltk>=3.8.1,<4",
    "psycopg2-binary>=2.9.8,<3",
    "requests>=2.32.0,<3",
    "sqlalchemy>=2.0.40,<3",
    "awswrangler>=3.11.0,<4",
    "beautifulsoup4>=4.12.2,<5",
    "jyablonski-common-modules>=0.0.7",
]

[dependency-groups]
dev = [
    "black>=23.12.1",
    "coveralls>=3.3.1",
    "pytest>=7.4.2",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.1",
    "ipykernel>=6.25.2",
    "moto>=4.2.4",
    "ruff>=0.0.292",
    "mypy>=1.7.1,<2",
    "boto3-stubs>=1.29.6",
    "types-beautifulsoup4>=4.12.0.7",
    "click>=8.1.8",
]

[tool.uv]
package = false

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
filterwarnings = ["ignore::DeprecationWarning"]
testpaths = ["tests"]
markers = [
    "wip: work in progress",
    "infrastructure: mocks for dummy data (sql db, http endpoint etc)",
]
addopts = "-v"

[tool.coverage.run]
omit = ["src/app.py", "app.py"]

# don't complain if non-runnable code is included in coverage
[tool.coverage.report]
exclude_also = ["if __name__ == .__main__.:"]

[tool.ruff.lint]
# Enable all `pydocstyle` rules
select = ["D"]

# i copied these off reddit
extend-select = [
    "F",   # Pyflakes rules
    "W",   # PyCodeStyle warnings
    "E",   # PyCodeStyle errors
    "I",   # Sort imports properly
    "UP",  # Warn if certain things can changed due to newer Python versions
    "C4",  # Catch incorrect use of comprehensions, dict, list, etc
    "FA",  # Enforce from __future__ import annotations
    "ISC", # Good use of string concatenation
    "ICN", # Use common import conventions
    "RET", # Good return practices
    "SIM", # Common simplification rules
    "TID", # Some good import practices
    "TC",  # Enforce importing certain types in a TYPE_CHECKING block
    "PTH", # Use pathlib instead of os.path
    "NPY", # Some numpy-specific things
]

ignore = [
    "SIM112", # the env vars arent set w/ caps but fuqqit
    "TD002",  # i dont need author
    "TD003",  # i dont need issue links
    "D100",   # No docstring in public module ??? wtf
    "D104",   # no docstring in public package ??? wtf
    "D415",   # requires period at end of docstring. get some cranberry juice mfer
]

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 80

[tool.ruff.lint.per-file-ignores]
"*test*.py" = [
    "S101",    # asserts allowed in tests...
    "ARG",     # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT",     # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    "PLR2004", # Magic value used in comparison, ...
    "S311",    # Standard pseudo-random generators are not suitable for cryptographic purposes
    "D103",    # don't need docstrings in tests
    "D200",    # don't need docstrings in tests
    "D205",    # don't need one-liner docstrings in tests
]


[tool.ruff.lint.pydocstyle]
convention = "google"
